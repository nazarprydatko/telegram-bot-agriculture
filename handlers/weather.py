import uuid
from aiogram.types import Message
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from utils.weather_api import get_weather
from utils.logger_config import logger

class WeatherStates(StatesGroup):
    waiting_for_city = State()

async def cmd_get_weather(message: Message, state: FSMContext):
    await state.set_state(WeatherStates.waiting_for_city)
    await message.reply("üåÜ –í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞, –¥–ª—è —è–∫–æ–≥–æ —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É:")

async def process_city_weather(message: Message, state: FSMContext):
    try:
        city_name = message.text.strip()
        weather_data = get_weather(city_name)

        if weather_data.get("cod") != 200:
            await message.reply(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {weather_data.get('message', '–ù–µ–≤—ñ–¥–æ–º–æ.')}")

        else:
            temp = weather_data['main']['temp']
            weather = weather_data['weather'][0]['description']
            wind_speed = weather_data['wind']['speed']

            response = (
                f"üå§ **–ü–æ–≥–æ–¥–∞ —É –º—ñ—Å—Ç—ñ {city_name.capitalize()}**:\n"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n"
                f"üå¨ –í—ñ—Ç–µ—Ä: {wind_speed} –º/—Å\n"
                f"üåß –û–ø–∏—Å: {weather.capitalize()}"
            )
            await message.reply(response)

    except Exception as e:
        error_id = str(uuid.uuid4())
        user_id = message.from_user.id

        logger.error(
            f"[ERROR_ID={error_id}] –ü–æ–º–∏–ª–∫–∞ —É process_city_weather –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}: {e}",
            exc_info=True
        )

        await message.reply(
            f"‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è —Ç–µ—Ö–Ω—ñ—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞.\n–ö–æ–¥: `{error_id}`\n–°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
        )

    finally:
        await state.clear()
