from aiogram.types import Message
from database import fetch_all


async def cmd_calculate_profit(message: Message):
    try:
        query = """
        SELECT c.id, c.name, 
               COALESCE(SUM(h.total_mass) * 1000, 0) AS total_income, 
               COALESCE(SUM(e.amount), 0) AS total_expenses, 
               COALESCE(SUM(h.total_mass) * 1000, 0) - COALESCE(SUM(e.amount), 0) AS profit
        FROM crops c
        LEFT JOIN harvest h ON c.id = h.crop_id
        LEFT JOIN expenses e ON c.id = e.crop_id
        GROUP BY c.id, c.name;
        """
        result = fetch_all(query)

        if not result:
            await message.reply("‚ùå –î–∞–Ω–∏—Ö –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ –Ω–µ–º–∞—î.")
            return

        response = "üìä **–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω—ñ—Å—Ç—å –ø–æ—Å—ñ–≤—ñ–≤:**\n"
        for row in result:
            crop_id, name, income, expenses, profit = row
            response += (
                f"üåæ {name} (ID: {crop_id})\n"
                f"   –î–æ—Ö—ñ–¥: {income} –≥—Ä–Ω\n"
                f"   –í–∏—Ç—Ä–∞—Ç–∏: {expenses} –≥—Ä–Ω\n"
                f"   –ü—Ä–∏–±—É—Ç–æ–∫: {profit} –≥—Ä–Ω\n\n"
            )

        await message.reply(response)
    except Exception as e:
        await message.reply(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ: {e}")
